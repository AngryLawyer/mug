package require tcltest
namespace import ::tcltest::test
namespace import ::tcltest::cleanupTests

source ../mug.tcl

test parse_version_pattern {
    \"Any\" should be a valid choice
} -body {
    return [parse_version_pattern "any"]
} -result {any}

test parse_version_pattern {
    == should be a valid choice
} -body {
    return [parse_version_pattern "==123"]
} -result {== 123}

test parse_version_pattern {
    ~ should be a valid choice
} -body {
    return [parse_version_pattern "~123"]
} -result {~ 123}

test parse_version_pattern {
    >= should be a valid choice
} -body {
    return [parse_version_pattern ">=123"]
} -result {>= 123}

test parse_version_pattern {
    <= should be a valid choice
} -body {
    return [parse_version_pattern "<=123"]
} -result {<= 123}

test parse_version_pattern {
    < should be a valid choice
} -body {
    return [parse_version_pattern "<123"]
} -result {< 123}

test parse_version_pattern {
    > should be a valid choice
} -body {
    return [parse_version_pattern ">123"]
} -result {> 123}

test == {
    Double equals should perform exact matches
} -body {
    return "[match_version "1.2.3" "== 1.2.3"] [match_version "1.2.3" "== 1.2"]"
} -result {1 0}

test == {
    Approx equals should perform loose matches 
} -body {
    set first [match_version "1.2.3" "~ 1.2.3"] 
    set second [match_version "1.2.3" "~ 1.2"] 
    set third [match_version "1.3.2" "~ 1.2"] 
    return "$first $second $third"
} -result {1 1 0}

test >= {
    Should work as expected
} -body {
    set first [match_version "1.2.3" ">= 1.2.3"] 
    set second [match_version "1.2.3" ">= 1.2"] 
    set third [match_version "1.2.3" ">= 1.2.1.1"] 
    set fourth [match_version "1.2" ">= 1.3"] 
    set fifth [match_version "1.2" ">= 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {1 1 1 0 0}

test > {
    Should work as expected
} -body {
    set first [match_version "1.2.3" "> 1.2.3"] 
    set second [match_version "1.2.3" "> 1.2"] 
    set third [match_version "1.2.3" "> 1.2.1.1"] 
    set fourth [match_version "1.3" "> 1.2"] 
    set fifth [match_version "1.2" "> 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {0 1 1 1 0}

test <= {
    Should work as expected
} -body {
    set first [match_version "1.2.3" "<= 1.2.3"] 
    set second [match_version "1.2.3" "<= 1.2"] 
    set third [match_version "1.2.3" "<= 1.2.1.1"] 
    set fourth [match_version "1.3" "<= 1.2"] 
    set fifth [match_version "1.2" "<= 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {1 0 0 1 1}

test < {
    Should work as expected
} -body {
    set first [match_version "1.2.3" "< 1.2.3"] 
    set second [match_version "1.2.3" "< 1.2"] 
    set third [match_version "1.2.3" "< 1.2.1.1"] 
    set fourth [match_version "1.3" "< 1.2"] 
    set fifth [match_version "1.2" "< 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {0 0 0 1 1}

cleanupTests
