package require tcltest
namespace import ::tcltest::test
namespace import ::tcltest::cleanupTests

source ../app/mug.tcl

test parse_version_pattern {
    \"Any\" should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern "any"]
} -result {any}

test parse_version_pattern {
    empty should be recast as equals 
} -body {
    return [::mug::versions::parse_version_pattern "123"] 
} -result {= 123}

test parse_version_pattern {
    = should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern "=123"] 
} -result {= 123}

test parse_version_pattern {
    ~ should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern "~123"]
} -result {~ 123}

test parse_version_pattern {
    >= should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern ">=123"]
} -result {>= 123}

test parse_version_pattern {
    <= should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern "<=123"]
} -result {<= 123}

test parse_version_pattern {
    < should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern "<123"]
} -result {< 123}

test parse_version_pattern {
    > should be a valid choice
} -body {
    return [::mug::versions::parse_version_pattern ">123"]
} -result {> 123}

test = {
    Equals should perform exact matches
} -body {
    return "[::mug::versions::match_version "1.2.3" "= 1.2.3"] [::mug::versions::match_version "1.2.3" "= 1.2"] [::mug::versions::match_version "2" "= 2"]"
} -result {1 0 1}

test ~ {
    Approx equals should perform loose matches (startswith) 
} -body {
    set first [::mug::versions::match_version "1.2.3" "~ 1.2.3"] 
    set second [::mug::versions::match_version "1.2.3" "~ 1.2"] 
    set third [::mug::versions::match_version "1.3.2" "~ 1.2"] 
    return "$first $second $third"
} -result {1 1 0}

test >= {
    Should work as expected
} -body {
    set first [::mug::versions::match_version "1.2.3" ">= 1.2.3"] 
    set second [::mug::versions::match_version "1.2.3" ">= 1.2"] 
    set third [::mug::versions::match_version "1.2.3" ">= 1.2.1.1"] 
    set fourth [::mug::versions::match_version "1.2" ">= 1.3"] 
    set fifth [::mug::versions::match_version "1.2" ">= 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {1 1 1 0 0}

test > {
    Should work as expected
} -body {
    set first [::mug::versions::match_version "1.2.3" "> 1.2.3"] 
    set second [::mug::versions::match_version "1.2.3" "> 1.2"] 
    set third [::mug::versions::match_version "1.2.3" "> 1.2.1.1"] 
    set fourth [::mug::versions::match_version "1.3" "> 1.2"] 
    set fifth [::mug::versions::match_version "1.2" "> 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {0 1 1 1 0}

test <= {
    Should work as expected
} -body {
    set first [::mug::versions::match_version "1.2.3" "<= 1.2.3"] 
    set second [::mug::versions::match_version "1.2.3" "<= 1.2"] 
    set third [::mug::versions::match_version "1.2.3" "<= 1.2.1.1"] 
    set fourth [::mug::versions::match_version "1.3" "<= 1.2"] 
    set fifth [::mug::versions::match_version "1.2" "<= 1.2.2"] 
    return "$first $second $third $fourth $fifth"
} -result {1 0 0 0 1}

test < {
    Should work as expected
} -body {
    set first [::mug::versions::match_version "1.2.3" "< 1.2.3"] 
    set second [::mug::versions::match_version "1.2.3" "< 1.2"] 
    set third [::mug::versions::match_version "1.2.3" "< 1.2.1.1"] 
    set fourth [::mug::versions::match_version "1.3" "< 1.2"] 
    set fifth [::mug::versions::match_version "1.2" "< 1.2.2"] 
    set sixth [::mug::versions::match_version "1.2" "< 1.6"] 
    set seventh [::mug::versions::match_version "1.2" "< 2"] 
    return "$first $second $third $fourth $fifth $sixth $seventh"
} -result {0 0 0 0 1 1 1}

cleanupTests
